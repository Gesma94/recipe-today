services:
  database:
    container_name: postgres_container
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    networks:
      infra_net:
        ipv4_address: 192.168.0.2
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container
    restart: always
    environment:
      PGPASSWORD: ${PGPASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_HOST_PORT}:80"
    networks:
      infra_net:
        ipv4_address: 192.168.0.3
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database

  backend:
    container_name: backend_container
    build:
      context: ./
      dockerfile: ./apps/bff/Dockerfile
    ports:
      - "${BACKEND_HOST_PORT}:4000"
    networks:
      infra_net:
        ipv4_address: 192.168.0.7
    depends_on:
      - database

  frontend:
    container_name: frontend_container
    build:
      context: ./
      dockerfile: ./apps/webapp/Dockerfile
    ports:
      - "${FRONTEND_HOST_PORT}:80"
    networks:
      infra_net:
        ipv4_address: 192.168.0.8

volumes:
  pgadmin_data:
  postgres_data:

networks:
  infra_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: 192.168.0.1
